name: "🚂 Publish Railway Docker"

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches:
      - railway-template-v*
    tags:
      - "v*.railway"
  pull_request:
    branches:
      - railway-template-v*
    types: [opened, synchronize]
    paths:
      - ".github/workflows/publish-railway.yml"
      - "docker/**"
      - "packages/**"
      - "internal-packages/**"
      - "apps/**"
      - ".railway/**"
      - "pnpm-lock.yaml"
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag (e.g., v4.0.0)'
        required: false
        default: 'latest'

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      PRISMA_ENGINES_CHECKSUM_IGNORE_MISSING: 1
    outputs:
      version: ${{ steps.get_tag.outputs.tag }}
      image_url: ${{ steps.set_tags.outputs.image_url }}
    steps:
      - name: 🏭 Setup Depot CLI
        uses: depot/setup-action@v1

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "#️⃣ Get the image tag"
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TAG="${{ github.event.inputs.version_tag }}"
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
          elif [[ "${{ github.ref }}" == refs/heads/railway-template-v* ]]; then
            # Extract version from branch name (railway-template-v4.0.0 -> v4.0.0)
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            VERSION="${BRANCH_NAME#railway-template-}"
            TAG="${VERSION}"
          else
            TAG="latest"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "🏷️ Using tag: ${TAG}"

      - name: 🔢 Get the commit hash
        id: get_commit
        run: |
          echo "sha_short=$(echo ${{ github.sha }} | cut -c1-7)" >> "$GITHUB_OUTPUT"

      - name: 📛 Set the tags
        id: set_tags
        run: |
          # Use your fork's registry
          ref_without_tag=ghcr.io/nick0lay/trigger.dev-railway
          image_tags=$ref_without_tag:${{ steps.get_tag.outputs.tag }}
          
          # Also tag with branch-specific latest
          if [[ "${{ github.ref }}" == refs/heads/railway-template-v* ]]; then
            BRANCH_NAME="${GITHUB_REF#refs/heads/}"
            VERSION="${BRANCH_NAME#railway-template-}"
            # Add version-specific latest tag (e.g., v4-latest)
            MAJOR_VERSION=$(echo $VERSION | cut -d. -f1)
            image_tags=$image_tags,$ref_without_tag:${MAJOR_VERSION}-latest
          fi
          
          # Add commit SHA for traceability
          image_tags=$image_tags,$ref_without_tag:sha-${{ steps.get_commit.outputs.sha_short }}
          
          echo "image_tags=${image_tags}" >> "$GITHUB_OUTPUT"
          echo "image_url=${ref_without_tag}:${{ steps.get_tag.outputs.tag }}" >> "$GITHUB_OUTPUT"
          echo "📦 Image tags: ${image_tags}"

      - name: 📝 Set the build info
        id: set_build_info
        run: |
          tag=${{ steps.get_tag.outputs.tag }}
          echo "BUILD_APP_VERSION=${tag}" >> "$GITHUB_OUTPUT"
          echo "BUILD_GIT_SHA=${{ github.sha }}" >> "$GITHUB_OUTPUT"
          echo "BUILD_GIT_REF_NAME=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          echo "BUILD_TIMESTAMP_SECONDS=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: 🐙 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build image and push to GitHub Container Registry
        uses: depot/build-push-action@v1
        with:
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.set_tags.outputs.image_tags }}
          push: true
          build-args: |
            BUILD_APP_VERSION=${{ steps.set_build_info.outputs.BUILD_APP_VERSION }}
            BUILD_GIT_SHA=${{ steps.set_build_info.outputs.BUILD_GIT_SHA }}
            BUILD_GIT_REF_NAME=${{ steps.set_build_info.outputs.BUILD_GIT_REF_NAME }}
            BUILD_TIMESTAMP_SECONDS=${{ steps.set_build_info.outputs.BUILD_TIMESTAMP_SECONDS }}
          labels: |
            org.opencontainers.image.title=Trigger.dev Railway Edition
            org.opencontainers.image.description=Trigger.dev with IPv6 support for Railway deployment
            org.opencontainers.image.url=https://github.com/nick0lay/trigger.dev
            org.opencontainers.image.source=https://github.com/nick0lay/trigger.dev
            org.opencontainers.image.version=${{ steps.get_tag.outputs.tag }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=Apache-2.0
            railway.deployment=true

      - name: 📢 Output summary
        run: |
          echo "## 🚂 Railway Docker Image Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image URL:** \`${{ steps.set_tags.outputs.image_url }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** ${{ steps.get_tag.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ steps.get_commit.outputs.sha_short }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Features" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ IPv6 support for Redis connections" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Fixed ClickHouse HTTP/HTTPS handling" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Optimized for Railway deployment" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage in Railway" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`dockerfile" >> $GITHUB_STEP_SUMMARY
          echo "FROM ${{ steps.set_tags.outputs.image_url }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY